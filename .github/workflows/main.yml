name: Test

on:
  workflow_dispatch
 # push:
  #  branches:
  #  - dev
  #pull_request:
  #  branches:
  #  - dev
jobs:
  test_account:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r account/requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python account/app/manage.py test

    #- name: Python Django Coverage GitHub Action
    #  uses: dc740/django-coveragepy-github-action@0.9

    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          account
    - name: Yandex Cloud CR "Login" Action for GitHub Actions
      uses: yc-actions/yc-cr-login@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
    - name: Build, tag, and push image to Yandex Cloud Container Registry
      env:
        CR_REGISTRY: crpq5hg8snv82fhgppum
        CR_REPO: my-cr-repo_miniwork_account
        IMAGE_TAG: ${{ github.sha }}
      run: |
        account/docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
        account/docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG












  test_profile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          git fetch --prune --unshallow
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r profile/requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python profile/app/manage.py test
       
          
          
          
          
          

