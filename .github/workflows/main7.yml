name: Deploy BG
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'

env:
  PROFILE_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/profile:${{ github.sha }}
  ACCOUNT_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/account:${{ github.sha }}
  #NGINX_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/nginx:${{ github.sha }}

jobs:
  build-account:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Account
      uses: docker/build-push-action@v3
      with:
        context: ./account
        file: ./account/Dockerfile
        push: true
        tags: ${{ env.ACCOUNT_IMAGE }}
        #tags: depsemt2009/account:${{ steps.meta.outputs.version }}

  build-profile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Profile
        uses: docker/build-push-action@v3
        with:
          context: ./profile
          file: ./profile/Dockerfile
          push: true
          #build-args: SERVER_URL=${{ secrets.API_SERVER_URL }}
          tags: ${{ env.PROFILE_IMAGE }}
          #tags: depsemt2009/profile:${{ steps.meta.outputs.version }}
          #quay.io/siddhesh_ghadi/multi-arch-gha:latest
          #hub.docker.com/depsemt2009/profile:latest



  update-yc:
    runs-on: ubuntu-latest
    needs: [ build-account, build-profile]
    timeout-minutes: 5
    steps:
      - name: print out example job
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 158.160.127.41
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          passphrase: ${{ secrets.PASSPHRASE }}
          command_timeout: 30m
          script_stop: true
          script: |
            docker system prune --all --force --volumes
            #docker pull ${{ env.PROFILE_IMAGE }}
            #docker pull ${{ env.ACCOUNT_IMAGE }}
            echo "111"
            #sleep 30
            service_name1=profile
            service_name2=account
            echo "222"
            old_profile_id=$(docker ps -f name=$service_name1 -q | tail -n1)
            old_account_id=$(docker ps -f name=$service_name2 -q | tail -n1)
            echo "333"
            cd /tmp
            docker-compose up -d ${{ env.PROFILE_IMAGE }} --no-deps --scale $service_name1=2 --no-recreate $service_name1
            docker-compose up -d ${{ env.ACCOUNT_IMAGE }} --no-deps --scale $service_name2=2 --no-recreate $service_name2
            echo "444"
            sleep 30
            docker exec nginx /usr/sbin/nginx -s reload
            echo "555"
            docker stop $old_profile_id
            docker rm $old_profile_id
            echo "666"
            docker stop $old_account_id
            docker rm $old_account_id
            echo "777"
            docker-compose up -d --no-deps --scale $service_name1=1 --no-recreate $service_name1
            docker-compose up -d --no-deps --scale $service_name2=1 --no-recreate $service_name2
            echo "888"
            docker exec nginx /usr/sbin/nginx -s reload
            echo "succesfully redeployed $service_name1 and $service_name2"