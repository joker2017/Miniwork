name: Docker Image Publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: cr.yandex
  CR_REGISTRY: crpq5hg8snv82fhgppum
  CR_REPO: my-cr-repo-miniwork-account
  IMAGE_TAG: ${{ github.sha }}

  # github.repository as <account>/<repo>
 # IMAGE_NAME: ${{ my-cr-repo-miniwork-account }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: 'v2.1.1'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cr.yandex/$CR_REGISTRY/$CR_REPO

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: user/app:latest
        run: account/docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG


    #- name: Yandex Cloud CR "Login" Action for GitHub Actions
    #  uses: yc-actions/yc-cr-login@v1
    #  with:
    #    yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    #- name: Build, tag, and push image to Yandex Cloud Container Registry
    #  env:
    #    CR_REGISTRY: crpq5hg8snv82fhgppum
    #    CR_REPO: my-cr-repo-miniwork-account
    #    IMAGE_TAG: ${{ github.sha }}
    #  run: |
    #    account/docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
    #    account/docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG




   
   # - name: Yandex Cloud CR "Login" Action for GitHub Actions
   #   uses: yc-actions/yc-cr-login@v1
    #  with:
    #    yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
    #- name: Build, tag, and push image to Yandex Cloud Container Registry
    #  env:
    #    CR_REGISTRY: crpq5hg8snv82fhgppum
    #    CR_REPO: my-cr-repo-miniwork-account
    #    IMAGE_TAG: ${{ github.sha }}
     # run: |
    #    account/docker build -t cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG .
    #    account/docker push cr.yandex/$CR_REGISTRY/$CR_REPO:$IMAGE_TAG












       
          
          
          
          
          

