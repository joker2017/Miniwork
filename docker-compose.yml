version: '3.8'
services:


  account:
      build: ./account
      ports:
         - 8000:8000
      volumes:
         #- ./account/app:/app
         - media_volume:/app/vol/web/media
         - static_volume:/app/vol/web/static
      #command: gunicorn app.wsgi:application --bind 0.0.0.0:8000 --workers 3 -t 0
      command: python manage.py runserver 0.0.0.0:8000
      depends_on:
        - pgdb
      env_file: .env
      environment:
        - DEBUG=TRUE  #только в режиме разработки
        - DJANGO_SUPERUSER_USERNAME=admin
        - DJANGO_SUPERUSER_PASSWORD=admin
        - DJANGO_SUPERUSER_EMAIL=admin@example.com


  profile:
      build: ./profile
      ports:
         - 8002:8002
      volumes:
         #- ./profile/app:/app
         - media_volume:/app/vol/web/media
         - static_volume:/app/vol/web/static
      #command: gunicorn app.wsgi:application --bind 0.0.0.0:8001 --workers 3 -t 0
      command: python manage.py runserver 0.0.0.0:8002
      depends_on:
        - pgdb
      env_file: .env
      environment:
        - DEBUG=TRUE  #только в режиме разработки
        - DJANGO_SUPERUSER_USERNAME=admin
        - DJANGO_SUPERUSER_PASSWORD=admin
        - DJANGO_SUPERUSER_EMAIL=admin@example.com

  pgdb:
      image: postgres:15
      container_name: pgdb
      # Задание переменных окружения для контейнера с postgres
      environment:
         - POSTGRES_PASSWORD=postgres
      ports:
        - 5432:5432
      # Задание имени контейнера для сервиса pgdb
      
      # Связывание тома с директорией в контейнере для сохранения данных postgres
      volumes:
         - postgres_data:/var/lib/postgresql/data/



  #nginx:
  #  build: ./nginx
  #  ports:
  #     - 1337:80
       #- 1337:8000

  #  volumes:
  #    - ./config/nginx/conf.d:/etc/nginx/conf.d
  #    - media_volume:/app/vol/web/media
  #    - static_volume:/app/vol/web/static
  #    - media2_volume:/app/vol/web/media
  #    - static2_volume:/app/vol/web/static
  #  depends_on:
  #    - account
  #    - profile
    #restart: "on-failure"
volumes:
  postgres_data: 
  #null
  static_volume:  # <-- declare the static volume
  media_volume:  # <-- declare the media volume
#  static2_volume:  # <-- declare the static volume
#  media2_volume:



